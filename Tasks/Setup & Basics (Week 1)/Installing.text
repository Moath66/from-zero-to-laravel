

---

## ⚙️ Step 1 — Set Up the Linux Environment (WSL2 + Ubuntu)

WSL stands for Windows Subsystem for Linux. It allows you to run a Linux distribution alongside your Windows operating system. This is useful for web development because many web servers and tools are designed to run on Linux.

Ubuntu is one of the most popular Linux distributions (a flavor of Linux).


### 🟢 1.1 — Install WSL2 with Ubuntu

In **PowerShell as Administrator** (Windows):

```powershell
wsl --install
```

> This installs WSL2 and sets up Ubuntu Linux.

To confirm installed distributions:

```powershell
wsl --list --verbose
# or
wsl -l -v
```

---

### 🟢 1.2 — Start / Exit Ubuntu

Open Ubuntu from the Start Menu or run:

```powershell
wsl
```

To exit:

```bash
exit
```

---

### 🟢 1.3 — Update Ubuntu Packages

Run in Ubuntu terminal:

```bash
sudo apt update
```

This refreshes the package list before installing anything.

---

## 🧩 Step 2 — Install LEMP Stack Components

### 🟢 2.1 — Install PHP with Required Extensions

```bash
sudo apt install -y software-properties-common ca-certificates lsb-release apt-transport-https
sudo add-apt-repository ppa:ondrej/php -y
sudo apt update
sudo apt install -y php php-cli php-common php-mbstring php-xml php-bcmath php-curl php-zip unzip
```

---

### 🟢 2.2 — Install Composer (PHP Dependency Manager)

```bash
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php composer-setup.php --install-dir=/usr/local/bin --filename=composer
php -r "unlink('composer-setup.php');"
```

Verify:

```bash
composer -V
```

---

### 🟢 2.3 — Install MySQL (Database)

```bash
sudo apt install -y mysql-server mysql-client
sudo mysql_secure_installation
```

Login to MySQL:

```bash
sudo mysql -u root -p
# password: Moath2001@
```

Create a database and user for Laravel:
mysql -u root -p

```sql


CREATE DATABASE IF NOT EXISTS `user-panel_db` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE USER IF NOT EXISTS 'meezo17'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'Moath172001@';
ALTER USER 'meezo17'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'Moath172001@';
GRANT ALL PRIVILEGES ON `user-panel_db`.* TO 'meezo17'@'localhost';
FLUSH PRIVILEGES;
EXIT;

mysql -u meezo17 -p -D user-panel_db



1) Re-grant privileges to the correct database

# open mysql as root (will ask for root password)
mysql -u root -p


GRANT ALL PRIVILEGES ON `api-tests_db`.* TO 'meezo2'@'localhost';
FLUSH PRIVILEGES;
EXIT;

2) Verify the grants for that user
# (as root) show grants for the user
mysql -u root -p -e "SHOW GRANTS FOR 'meezo2'@'localhost'\G"


GRANT ALL PRIVILEGES ON `api-tests_db`.* TO 'meezo2'@'localhost'

3) Test logging in as the project user

mysql -u meezo2 -p -D api-tests_db
# enter password: Moath22001@

---

### 🟢 2.4 — Install Nginx (Web Server)

```bash
sudo apt install -y nginx
sudo systemctl start nginx
sudo systemctl enable nginx
```

Verify by visiting:
[http://localhost/](http://localhost/)

---

## 🌱 Step 3 — Install Laravel Project

### 🟢 3.1 — Create New Laravel Project

Inside your desired project directory:

```bash
composer create-project laravel/laravel .
```

Generate app key:

```bash
php artisan key:generate
```

---

### 🟢 3.2 — Install Frontend Dependencies

```bash
npm install
npm run dev
```

---

### 🟢 3.3 — Serve Laravel

```bash
php artisan serve
```

Keep both servers running

php artisan serve

npm run dev


Open your browser:
🔗 [http://127.0.0.1:8000](http://127.0.0.1:8000) → Laravel welcome page 🎉

---

## ✅ Summary Flow

```
Windows → Install WSL2 + Ubuntu
Ubuntu → apt update
→ Install PHP + Composer
→ Install MySQL
→ Install Nginx
→ Create Laravel project
→ npm install + run dev
→ php artisan serve
→ Visit http://127.0.0.1:8000
```


importnt notes:

to switch the directory to the laravel-app run the following command:
cd "/mnt/c/Users/meezz/OneDrive/Desktop/AllFiles/8th semester/Php-Laravel/Mini-Projects"


Force kill all PHP processes:

sudo pkill -9 -f "artisan serve"

---

